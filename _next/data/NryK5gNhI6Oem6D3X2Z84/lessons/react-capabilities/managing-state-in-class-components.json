{"pageProps":{"post":{"attributes":{"description":"Class components work a little different from hooks in terms of marshalling state. Brian teaches you how to manage your state using setState and life cycle methods."},"html":"<p>Okay, so on this page, notice first we have a loading indicator (this one isn&#39;t nice looking but you could put some effort into it if you wanted.) This is a good idea while you&#39;re waiting for data to load.</p>\n<p>Let&#39;s make a nice photo carousel of the pictures for the animal now. Make a new file called Carousel.js:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Component</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Carousel</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Component</span> {\n  state = {\n    <span class=\"hljs-attr\">active</span>: <span class=\"hljs-number\">0</span>,\n  };\n\n  <span class=\"hljs-keyword\">static</span> defaultProps = {\n    <span class=\"hljs-attr\">images</span>: [<span class=\"hljs-string\">&quot;http://pets-images.dev-apis.com/pets/none.jpg&quot;</span>],\n  };\n\n  <span class=\"hljs-title function_\">render</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> { active } = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">state</span>;\n    <span class=\"hljs-keyword\">const</span> { images } = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">props</span>;\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;carousel&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">{images[active]}</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;animal&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;carousel-smaller&quot;</span>&gt;</span>\n          {images.map((photo, index) =&gt; (\n            // eslint-disable-next-line\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span>\n              <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{photo}</span>\n              <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">{photo}</span>\n              <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{index</span> === <span class=\"hljs-string\">active</span> ? &quot;<span class=\"hljs-attr\">active</span>&quot; <span class=\"hljs-attr\">:</span> &quot;&quot;}\n              <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;animal thumbnail&quot;</span>\n            /&gt;</span>\n          ))}\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Carousel</span>;\n</code></pre>\n<p>Add the Carousel component to the Detail page.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// import at top</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Carousel</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./Carousel&quot;</span>;\n\n<span class=\"hljs-comment\">// at top of Details function</span>\n<span class=\"hljs-keyword\">const</span> { animal, breed, city, state, description, name, images } = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">state</span>;\n\n<span class=\"hljs-comment\">// first component inside div.details</span>\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Carousel</span> <span class=\"hljs-attr\">images</span>=<span class=\"hljs-string\">{images}</span> /&gt;</span></span>;\n</code></pre>\n<ul>\n<li>defaultProps does exactly what it sounds like: it allows you to set props that a component has by default if they&#39;re not furnished by parent. That way we don&#39;t have to do detection logic and can just assume they&#39;re always there.</li>\n</ul>\n<p>Let&#39;s make it so we can react to someone changing the photo on the carousel.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// add event listener</span>\n  handleIndexClick = <span class=\"hljs-function\"><span class=\"hljs-params\">event</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">setState</span>({\n      <span class=\"hljs-attr\">active</span>: +event.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">dataset</span>.<span class=\"hljs-property\">index</span>\n    });\n  };\n\n<span class=\"hljs-comment\">// above img</span>\n<span class=\"hljs-comment\">// eslint-disable-next-line</span>\n\n<span class=\"hljs-comment\">// add to img</span>\nonClick={<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">handleIndexClick</span>}\ndata-index={index}\n</code></pre>\n<ul>\n<li>This is how you handle events in React class components. If it was keyboard handler, you&#39;d do an onChange or onKeyUp, etc. handler.</li>\n<li>Notice that the handleIndexClick function is an arrow function. This is because we need the <code>this</code> in <code>handleIndexClick</code> to be the correct <code>this</code>. An arrow function assures that because it will be the scope of where it was defined. This is common with how to deal with event handlers with class components.</li>\n<li>The data attribute comes back as a string. We want it to be a number, hence the <code>+</code>.</li>\n<li>We&#39;re doing bad accessibility stuff. But this makes it a lot simpler for learning for now. But don&#39;t do this in production.</li>\n</ul>\n<blockquote>\n<p>üèÅ <a href=\"https://github.com/btholt/citr-v6-project/tree/master/09-managing-state-in-class-components\">Click here to see the state of the project up until now: 09-managing-state-in-class-components</a></p>\n</blockquote>\n","slug":"managing-state-in-class-components","title":"Managing State in Class Components","section":"React Capabilities","icon":"map","filePath":"/home/runner/work/next-react-v6/next-react-v6/lessons/05-react-capabilities/D-managing-state-in-class-components.md","nextSlug":"/next-react-v6/lessons/special-case-react-tools/error-boundaries","prevSlug":"/next-react-v6/lessons/react-capabilities/class-properties"}},"__N_SSG":true}