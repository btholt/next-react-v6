{"pageProps":{"post":{"attributes":{"description":""},"html":"<p>We&#39;re not quite done here. We got the reading part of Redux done but not the writing. Let&#39;s go do that too in SearchParams.js</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { useSelector, useDispatch } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react-redux&quot;</span>;\n<span class=\"hljs-keyword\">import</span> changeLocation <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./actionCreators/changeLocation&quot;</span>;\n<span class=\"hljs-keyword\">import</span> changeTheme <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./actionCreators/changeTheme&quot;</span>;\n<span class=\"hljs-keyword\">import</span> changeAnimal <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./actionCreators/changeAnimal&quot;</span>;\n<span class=\"hljs-keyword\">import</span> changeBreed <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./actionCreators/changeBreed&quot;</span>;\n\n<span class=\"hljs-comment\">// up with other hooks</span>\n<span class=\"hljs-keyword\">const</span> dispatch = <span class=\"hljs-title function_\">useDispatch</span>();\n\n<span class=\"hljs-comment\">// change inputs</span>\n\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;location&quot;</span>\n  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{location}</span>\n  <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;Location&quot;</span>\n  <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> dispatch(changeLocation(e.target.value))}\n/&gt;</span>\n\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span>\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;animal&quot;</span>\n  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{animal}</span>\n  <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> dispatch(changeAnimal(e.target.value))}\n  onBlur={(e) =&gt; dispatch(changeAnimal(e.target.value))}\n&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></span>\n\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span>\n  <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{!breeds.length}</span>\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;breed&quot;</span>\n  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{breed}</span>\n  <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> dispatch(changeBreed(e.target.value))}\n  onBlur={(e) =&gt; dispatch(changeBreed(e.target.value))}\n&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></span>\n\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span>\n  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{theme}</span>\n  <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> dispatch(changeTheme(e.target.value))}\n  onBlur={(e) =&gt; dispatch(changeTheme(e.target.value))}\n&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></span>\n</code></pre>\n<ul>\n<li>This dispatching is so much nicer than it is with other API</li>\n<li>The <code>useDispatch</code> hook gives you back a dispatching function so you can dispatch actions</li>\n<li>That&#39;s really it!</li>\n</ul>\n<p>Now we&#39;re also using mapDispatchToState which lets us write functions to dispatch actions to Redux. Let&#39;s quickly add it to Details.js</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// replace ThemeContext import</span>\n<span class=\"hljs-keyword\">import</span> { connect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react-redux&quot;</span>;\n\n<span class=\"hljs-comment\">// remove all the ThemeContext stuff and the interior function</span>\n<span class=\"hljs-comment\">// replace `context.theme` with just `this.props.theme` for the backgroundColor</span>\n\n<span class=\"hljs-comment\">// bottom</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">mapStateToProps</span> = (<span class=\"hljs-params\">{ theme }</span>) =&gt; ({ theme });\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">WrappedDetails</span> = <span class=\"hljs-title function_\">connect</span>(mapStateToProps)(<span class=\"hljs-title class_\">Details</span>);\n\n<span class=\"hljs-comment\">// replace DetailsWithRouter</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ReduxWrappedDetails</span> = <span class=\"hljs-title function_\">connect</span>(mapStateToProps)(<span class=\"hljs-title class_\">Details</span>);\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">DetailsWithRouter</span> = <span class=\"hljs-title function_\">withRouter</span>(<span class=\"hljs-title class_\">ReduxWrappedDetails</span>);\n</code></pre>\n<p>Now it should work! Redux is a great piece of technology that adds a lot of complexity to your app. Don&#39;t add it lightly. I&#39;d say you&#39;d rarely want to start a new project using Redux: hit the problems first and then refactor it in. You just saw how.</p>\n","slug":"dispatching-actions","title":"Dispatching Actions","section":"Redux","icon":"database","filePath":"/home/runner/work/next-react-v6/next-react-v6/lessons/14-redux/E-dispatching-actions.md","nextSlug":"/next-react-v6/lessons/redux/redux-dev-tools","prevSlug":"/next-react-v6/lessons/redux/providers"}},"__N_SSG":true}