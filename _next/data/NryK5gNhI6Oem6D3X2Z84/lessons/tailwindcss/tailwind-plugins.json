{"pageProps":{"post":{"attributes":{"description":""},"html":"<p>Our inputs look really gross. We could write our own components (basically reusable CSS classes, what a novel idea) but we&#39;re just going to use the good ones that Tailwind provides out of the box.</p>\n<p>Run <code>npm install -D @tailwindcss/forms@0.2.1</code>.</p>\n<p>Put this into your tailwind.config.js</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// replace plugins</span>\n<span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;@tailwindcss/forms&quot;</span>)],\n</code></pre>\n<p>This will apply a bunch of default styles for all of our basic form elements. Tailwind has a pretty great plugin ecosystem. One of my favorites is the aspect-ratio one. CSS doesn&#39;t currently have a backwards compatible way of doing aspect ratios (e.g. keep this image in a square ratio) and this plugin makes a primitive that you can use like that. Super cool.</p>\n<p>Notice our location input still looks bad. With this plugin they (probably wisely) require you to add <code>type=&quot;text&quot;</code> to the the input so they can have a good selector for it. So please go add that now to your text input.</p>\n<p>Let&#39;s finish making SearchParams looks nice.</p>\n<p>To each of the selects and inputs, add <code>className=&quot;w-60&quot;</code> so they have a nice uniform width.</p>\n<p>To the breed selector, we want it to be grayed out when it&#39;s not available to use. However the PostCSS 7 version of Tailwind doesn&#39;t work with the <code>disabled:&lt;style&gt;</code> class (new versions do.) So add this to your tailwind.config.js config.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">//replace variants</span>\n<span class=\"hljs-attr\">variants</span>: {\n  <span class=\"hljs-attr\">opacity</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">{ after }</span>) =&gt;</span> <span class=\"hljs-title function_\">after</span>([<span class=\"hljs-string\">&quot;disabled&quot;</span>]),\n},\n</code></pre>\n<p>This will allow our specific use case. Again, don&#39;t dig too much into this because once Parcel 2 lands or you whenever you&#39;re using PostCSS 8 this isn&#39;t a big deal.</p>\n<p>Now add <code>className=&quot;w-60 disabled:opacity-50&quot;</code> to the breed <code>&lt;select&gt;</code>.</p>\n<p>Replace the button with:</p>\n<pre><code class=\"hljs language-javascript\">&lt;button\n  className=<span class=\"hljs-string\">&quot;rounded px-6 py-2 color text-white hover:opacity-50 border-none&quot;</span>\n  style={{ <span class=\"hljs-attr\">backgroundColor</span>: theme }}\n&gt;\n  <span class=\"hljs-title class_\">Submit</span>\n&lt;/button&gt;\n</code></pre>\n<p>Nothing surprising there.</p>\n","slug":"tailwind-plugins","title":"Tailwind Plugins","section":"TailwindCSS","icon":"wind","filePath":"/home/runner/work/next-react-v6/next-react-v6/lessons/10-tailwindcss/C-tailwind-plugins.md","nextSlug":"/next-react-v6/lessons/tailwindcss/grid-and-breakpoints","prevSlug":"/next-react-v6/lessons/tailwindcss/tailwind-basics"}},"__N_SSG":true}